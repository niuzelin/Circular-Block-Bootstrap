from statsmodels.tsa.arima_model import ARMA
import warnings
warnings.simplefilter('ignore')


class ARModelFitClass:
    """fit the AR(p) model, given ar_p

    Input Parameters:
        ar_time_series: pd.Series, index is a time period
        ar_p: number
    Return:
        ar_model_fit_params: pd.Series, index is ar.Lx.y
        ar_model_residual: pd.Series, index is a time period"""

    def __init__(self, ar_time_series, ar_p):
        self.ar_time_series = ar_time_series
        self.ar_p = ar_p
        self.ar_model = []
        self.ar_model_fit = []
        self.ar_model_residual = []
        self.ar_model_fit_parameters = []

    def ar_model_fit_function(self):
        # method: maximum likelihood estimation
        # model judgment: AIC;  non constant
        # transform parameters to make sure stationary
        # no convergence information is displayed
        self.ar_model = ARMA(endog=self.ar_time_series, order=(self.ar_p, 0))
        # print(self.ar_model)
        self.ar_model_fit = self.ar_model.fit(method='mle', ic='aic', trend='nc',
                                              transparams=True, disp=0)
        # print(self.ar_model_fit)
        self.ar_model_fit_parameters = self.ar_model_fit.params
        self.ar_model_residual = self.ar_model_fit.resid

    def get_model_fit_parameters_function(self):
        return self.ar_model_fit_parameters

    def get_model_residual_function(self):
        return self.ar_model_residual


# testing code
# ar_time_series is generated by ARGeneratorClass
# test_b = ARModelFitClass(ar_time_series=ar_time_series, ar_p=ar_p)
# test_b.ar_model_fit_function()
# ar_model_fit_parameters = test_b.get_model_fit_parameters_function()
# ar_model_residual = test_b.get_model_residual_function()

# potential problems / improvements:
# 1. too many instance empty variables are created before
# 2. ar_model.fit(transform=True).
# When No. parameters of AR increase to more than 10,
# some problems are increased

# 3. ar_model.fit(trend="nc").
# Make it as an option for user to choose,
# which suggests the corresponding change in ARGeneratorClass
# to make sure that user can generate AR(p) model with constant